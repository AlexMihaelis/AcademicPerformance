@using AcademicPerformance.Models.ViewModels;
@using System.Text.Json;
@model FilterPerfomanceViewModel;

@{
    ViewData["Title"] = "Home Page";

    var disciplinesSelectItemList = Model.Disciplines
        .Select(x => new SelectListItem(x.Name, x.DisciplineId.ToString(), x.DisciplineId == Model.SelectedDisciplineId))
        .ToList();

    var groupsSelectItemList = Model.Groups
        .Select(x => new SelectListItem(x.Name, x.GroupId.ToString(), x.GroupId == Model.SelectedDisciplineId))
        .ToList();
}
<!DOCTYPE html>
<html>
<head>
    <title>Страница успеваемости</title>

    <script>
        function setDirectionValues(data) {
            data.SelectedDisciplineId = $('#discipline')?.val();
            data.SelectedGroupId = $('#group')?.val();
        }

        function updateDisciplines(e) {
            // Возвращаем результат относительно выбранной дисциплины
            let data = @Html.Raw(JsonSerializer.Serialize(Model));
            setDirectionValues(data);
            
            $.ajax({
                type: "POST",
                url: '@(Url.Action("Filter"))',
                data: data,
                success: function (response) {
                    $('html').html(response);
                }
            });
        }

        function updateGroups(e) {
            // Возвращаем результат относительно выбранной группы
            let data = @Html.Raw(JsonSerializer.Serialize(Model));
            setDirectionValues(data);

            $.ajax({
                type: "POST",
                url: '@(Url.Action("Filter"))',
                data: data,
                success: function (response) {
                    $('html').html(response);
                }
            });
        }

        function saveGrades() {
            // Логика для сохранения оценок в базе данных или другом хранилище
        }
    </script>
</head>
<body>

    <div class="container">

        <div class="form-group">
            <label for="discipline">Выберите дисциплину</label>
            @Html.DropDownListFor(x => x.SelectedDisciplineId, disciplinesSelectItemList, "-", new { id="discipline", @class="form-control", onchange="updateDisciplines(this)" })
        </div>

        <div class="form-group">
            <label for="group">Выберите группу</label>
            @Html.DropDownListFor(x => x.SelectedGroupId, groupsSelectItemList, "-", new { id="group", @class="form-control", onchange="updateGroups(this)" })
        </div>
        

        @if (Model.Perfomance != null && Model.Perfomance.Any())
        {

            <button class="btn btn-primary" onclick="saveGrades()">Сохранить</button>

            <table class="table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Студент</th>
                        <th>Понедельник</th>
                        <th>Вторник</th>
                        <th>Среда</th>
                        <th>Четверг</th>
                        <th>Пятница</th>
                        <th>Суббота</th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var student in Model.Perfomance)
                    {
                        <tr>
                            <td>@student.Number</td>
                            <td>@student.StudentFullname</td>
                            @foreach (var grade in student.Grades.OrderBy(x => x.DayOfWeek))
                            {
                                <td>
                                    @Html.DropDownList("value", new List<SelectListItem>() {
                                        new SelectListItem("Н", "Н", grade.Value == "Н"),
                                        new SelectListItem("2", "2", grade.Value == "2"),
                                        new SelectListItem("3", "3", grade.Value == "3"),
                                        new SelectListItem("4", "4", grade.Value == "4"),
                                        new SelectListItem("5", "5", grade.Value == "5"),
                                    }, " ", new { @class="form-control" })
                                </td>
                            }
                        </tr>
                    }
                </tbody>

            </table>
        }

    </div>
</body>
</html>
